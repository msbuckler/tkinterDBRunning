#import relevant libraries
from tkinter import * 
import sqlite3 as sq 
import datetime



window = Tk()
window.title("Compound Tracker") 
#and the size of the window is set.
window.geometry("800x600+0+0")
window.configure(background="SpringGreen2")
#We can input text to form a header for the GUI. This is done via the ‘header’ variable.
header = Label(window, text="Running Tracker", font=("arial",30,"bold"),bg="SpringGreen2", fg="black").pack()
#connect to the DB
con = sq.connect("running.db")
c = con.cursor()

#variables which are assigned as Label object
L1 = Label(window, text = 'Run Type', font=('arial', 18),bg="SpringGreen2").place(x=10,y=100)
L2 = Label(window, text = 'Day (dd)', font=('arial',18),bg="SpringGreen2").place(x=10,y=150)
L3 = Label(window, text = 'Month (mm)', font=('arial',18),bg="SpringGreen2").place(x=10,y=200)
L4 = Label(window, text = 'Year (yyyy)', font=('arial',18),bg="SpringGreen2").place(x=10,y=250)
L5 = Label(window, text = 'Time (mins)', font=('arial',18),bg="SpringGreen2").place(x=10,y=300)
L6 = Label(window, text = 'Miles', font=('arial',18),bg="SpringGreen2").place(x=10,y=350)

runtype = StringVar(window)
runtype.set("Choose")

#create a list(dictionary) for runs
runtypelist = {'Recovery', 'Speed', 'Interval', 'HillTrain'}
#set up optionmenu
runtypemenu = OptionMenu(window, runtype, *runtypelist)
runtypemenu.config(width=15)
runtypemenu.place(x=220, y=105)
#set up your entry boxes you need to define as stringvar
day = StringVar()#these bind the variables that you get from the entry boxes
dayT = Entry(window, textvariable=day)
dayT.place(x=220, y=155)
month = StringVar()
monthT = Entry(window, textvariable=month)
monthT.place(x=220,y=205)
year = StringVar()
yearT = Entry(window, textvariable=year)
yearT.place(x=220,y=255)
timetaken = StringVar()
timeT = Entry(window, textvariable=timetaken)
timeT.place(x=220,y=305)
miles = StringVar()
milesT = Entry(window, textvariable=miles)
milesT.place(x=220,y=355)

def clear():
    runtype.set('Choose')
    day.set('')
    month.set('')
    year.set('')
    timetaken.set('')
    miles.set('')

def sendrecord():
  print("You have submitted a record")
  c.execute('CREATE TABLE IF NOT EXISTS ' +runtype.get()+ ' (Datestamp TEXT, timetaken INTEGER, miles INTEGER)') #SQL syntax

  date = datetime.date(int(year.get()),int(month.get()), int(day.get())) #Date in format from 'import datetime'

  c.execute('INSERT INTO ' +runtype.get()+ ' (Datestamp, timetaken, miles) VALUES (?, ?, ?)',
                  (date, timetaken.get(), miles.get())) #Insert record into database.
  con.commit()

def newwindow():
  newWin = Toplevel(window)
  newWin.geometry("1000x800+0+0")
  header = Label(newWin, text="another window",font=("ariel",30,"bold")).pack()

button_1 = Button(window, text="Clear",command=clear)
button_1.place(x=10,y=400)

button_2 = Button(window, text="Submit",command=sendrecord)
button_2.place(x=80,y=400)

button_3 = Button(window, text="another window", command=newwindow)
button_3.place(x=200, y=400)


#To keep the root window open, a loop needs to be set to the root window.
window.mainloop()
